import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
BOT_TOKEN = "8253495388:AAHIMBBOi4VDIPE-_38vAfwaWAmCRejYK1U"  
GROUP_ID = -1003068970627  

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# === –®–∞–≥ 1: /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start."""
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, –¥–æ—Ä–æ–≥–æ–π –ø–æ–¥–ø–∏—Å—á–∏–∫!\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–ª—è –∫–∞–Ω–∞–ª–∞."
    )

# === –®–∞–≥ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ /start ===
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_message = update.message.text
    username = update.message.from_user.username or "–Ω–µ—Ç username"
    full_name = f"{update.message.from_user.first_name} {update.message.from_user.last_name}" if update.message.from_user.last_name else update.message.from_user.first_name

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã
    forwarded_message = (
        f"üì¨ <b>–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç:</b>\n\n"
        f"{user_message}\n\n"
        f"üë§ <b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b>\n"
        f"‚Ä¢ Username: {username}\n"
        f"‚Ä¢ –ò–º—è: {full_name}\n"
        f"‚Ä¢ ID: <code>{update.message.from_user.id}</code>"
    )

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        await context.bot.send_message(
            chat_id=GROUP_ID,
            text=forwarded_message,
            parse_mode='HTML'
        )
        # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø—É.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ ===
if __name__ == '__main__':
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler('start', start))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

    # –ó–∞–ø—É—Å–∫
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()